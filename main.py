from telegram import InlineKeyboardButton, InlineKeyboardMarkup, Update, ReplyKeyboardMarkup, KeyboardButton
from telegram.ext import Updater, CommandHandler, CallbackQueryHandler, CallbackContext, ConversationHandler, MessageHandler, Filters
import logging

# –°—Ç–∞–Ω–∏ –¥–ª—è ConversationHandler
(
    CHOOSING, SEEKING_COMPANION, CAR_OWNER, EVACUATION, PERSON_COUNT, DEPARTURE, DESTINATION, TRAVEL_DATE, COMMENT, PHONE_NUMBER, TELEGRAM_ID, PERSON_COUNT_EVACUATION, NAMES_EVACUATION, DEPARTURE_EVACUATION, COMMENT_EVACUATION, PHONE_NUMBER_EVACUATION, TELEGRAM_ID_EVACUATION
) = range(17)

logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)

class MainCommands:
    @staticmethod
    def start(update: Update, context: CallbackContext) -> int:
        update.message.reply_text(
            'üëã –ü—Ä–∏–≤—ñ—Ç! –Ø —á–∞—Ç –±–æ—Ç –¥–ª—è —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è –ø–æ—Å—Ç—ñ–≤ –¥–ª—è –ø–æ—à—É–∫—É –ø–æ–ø—É—Ç–Ω–∏–∫—ñ–≤ –≤ –£–∫—Ä–∞—ó–Ω—ñ. üîçüöå\n\n'
            'üö®–¢–∞–∫–æ–∂ –Ω–∞—à –±–æ—Ç –¥–æ–ø–æ–º–∞–≥–∞—î —Å—Ç–≤–æ—Ä—é–≤–∞—Ç–∏ –ø–æ—Å—Ç–∏ –¥–ª—è –ø–æ—à—É–∫—É –≤–æ–ª–æ–Ω—Ç–µ—Ä—ñ–≤ –¥–ª—è –µ–≤–∞–∫—É–∞—Ü—ñ—ó –ª—é–¥–µ–π –∑ –æ–∫—É–ø–æ–≤–∞–Ω–∏—Ö —Ç–∞ –ø—Ä–∏–∫–æ—Ä–¥–æ–Ω–Ω–∏—Ö —Ç–µ—Ä–∏—Ç–æ—Ä—ñ–π.üì¢üöë\n\n'
            '–®—É–∫–∞—î—à –ø–æ–ø—É—Ç–Ω–∏–∫—ñ–≤? –ß–∏ –º–∞—î—à –¥–µ–∫—ñ–ª—å–∫–∞ –≤—ñ–ª—å–Ω–∏—Ö –º—ñ—Å—Ü—å —É —Å–∞–ª–æ–Ω—ñ? üß≥üöô –ê–±–æ –º–æ–∂–ª–∏–≤–æ –ø–æ—Ç—Ä–µ–±—É—î—à –¥–æ–ø–æ–º–æ–≥–∏ –≤ –µ–≤–∞–∫—É–∞—Ü—ñ—ó? üö®\n'
            '–°—Ç–≤–æ—Ä–∏ —Å–≤—ñ–π –ø–æ—Å—Ç –ø—Ä–æ —Ü–µ —É –Ω–∞—à –¢–µ–ª–µ–≥—Ä–∞–º –∫–∞–Ω–∞–ª –ø—Ä—è–º–æ –∑–∞—Ä–∞–∑! \n\n –ù–∞—Ç–∏—Å–Ω—ñ—Ç—å /choose –¥–ª—è –≤–∏–±–æ—Ä—É –æ–ø—Ü—ñ–π. üîç‚ú®'
        )
        return ConversationHandler.END

    @staticmethod
    def choose(update: Update, context: CallbackContext) -> int:
        keyboard = [
            [InlineKeyboardButton("üîç–®–£–ö–ê–Æ –ü–û–ü–£–¢–ù–ò–ö–êüöó", callback_data='option_1')],
            [InlineKeyboardButton("üîç–í–Ü–ó–¨–ú–£ –ü–û–ü–£–¢–ù–ò–ö–ê. –Ø –í–õ–ê–°–ù–ò–ö –ê–í–¢–ûüöó", callback_data='option_2')],
            [InlineKeyboardButton("üö®–ü–û–¢–†–Ü–ë–ù–û –ï–í–ê–ö–£–Æ–í–ê–¢–ò–°–Ø. –¢–µ—Ä–º—ñ–Ω–æ–≤–æ!üì¢", callback_data='option_3')]
        ]
        reply_markup = InlineKeyboardMarkup(keyboard)
        update.message.reply_text('–Ø–∫–∞ —Å–∏—Ç—É–∞—Ü—ñ—è –≤—ñ–¥–Ω–æ—Å–∏—Ç—å—Å—è –¥–æ —Ç–µ–±–µ? –ë—É–¥—å –ª–∞—Å–∫–∞, –æ–±–µ—Ä—ñ—Ç—å –æ–ø—Ü—ñ—é:', reply_markup=reply_markup)
        return CHOOSING

    @staticmethod
    def button(update: Update, context: CallbackContext) -> int:
        query = update.callback_query
        query.answer()

        follow_up_map = {
            'option_1': SEEKING_COMPANION,
            'option_2': CAR_OWNER,
            'option_3': EVACUATION
        }

        state = follow_up_map.get(query.data)
        if state is not None:
            query.message.reply_text(
                '–í–∏ –≤–ø–µ–≤–Ω–µ–Ω—ñ —â–æ –≤–∏ —Ö–æ—á–µ—Ç–µ —Å—Ç–≤–æ—Ä–∏—Ç–∏ –ø–æ—Å—Ç? ü§î\n\n'
                '–í–≤–µ–¥—ñ—Ç—å –ë–£–î–¨-–©–û –¥–ª—è –ø—ñ–¥—Ç–≤–µ—Ä–¥–∂–µ–Ω–Ω—è. –ù–ê–ü–†–ò–ö–õ–ê–î: 1. ‚úÖ \n'
                '–Ø–∫—â–æ —Ö–æ—á–µ—Ç–µ –≤—ñ–¥–º—ñ–Ω–∏—Ç–∏ —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è –ø–æ—Å—Ç—É, –Ω–∞—Ç–∏—Å–Ω—ñ—Ç—å - /cancel ‚ùå'
            )
            return state
        return CHOOSING

    @staticmethod
    def cancel(update: Update, context: CallbackContext) -> int:
        update.message.reply_text(
            '... \n\n'
            '–©–æ–± –≤—ñ–¥—Ä–∞–∑—É –ø–æ–≤–µ—Ä–Ω—É—Ç–∏—Å—è —É –≥–æ–ª–æ–≤–Ω–µ –ú–ï–ù–Æ - –Ω–∞—Ç–∏—Å–Ω—ñ—Ç—å /choose üîÑ\n'
            '–©–æ–± –ø–æ—á–∞—Ç–∏ –±–æ—Ç –∑ —Å–∞–º–æ–≥–æ –ø–æ—á–∞—Ç–∫—É - –Ω–∞—Ç–∏—Å–Ω—ñ—Ç—å /start üöÄ'
        )
        return ConversationHandler.END

class CompanionSearch:
    @staticmethod
    def seeking_companion(update: Update, context: CallbackContext) -> int:
        context.user_data['choice'] = 'üîç–®–£–ö–ê–Æ –ü–û–ü–£–¢–ù–ò–ö–êüöó'
        update.message.reply_text(
            "–î–æ–±—Ä–µ!‚ú®–Ø —Ç–æ–±—ñ –¥–æ–ø–æ–º–æ–∂—É —Å—Ç–≤–æ—Ä–∏—Ç–∏ –ø–æ—Å—Ç –ø—Ä–æ –ø–æ—à—É–∫ –ø–æ–ø—É—Ç–Ω–∏–∫–∞.üöó\n\n"
            "‚ùóÔ∏è‚ùóÔ∏è‚ùóÔ∏è–£—Å—ñ –ø–æ—Å—Ç–∏ –ø–µ—Ä–µ–≤—ñ—Ä—è—é—Ç—å—Å—è, —Ç–æ–º—É –∑–∞–ø–æ–≤–Ω—é–π—Ç–µ –ª–∏—à–µ —É –ø—Ä–∞–≤–∏–ª—å–Ω—ñ–π —Ñ–æ—Ä–º—ñ. –Ø–∫—â–æ —Ñ–æ—Ä–º–∞ –∑–∞–ø–æ–≤–Ω–µ–Ω–Ω—è –±—É–¥–µ —Ö–∏–±–Ω–æ—é - –ø–æ—Å—Ç –±—É–¥–µ –≤–∏–¥–∞–ª–µ–Ω–æ‚ùóÔ∏è‚ùóÔ∏è‚ùóÔ∏è\n\n"
            "üë©‚Äçüë¶ –°–∫—ñ–ª—å–∫–∏ —ó–¥–µ –æ—Å—ñ–±? üë®‚Äçüë©‚Äçüëß‚Äçüë¶üë®‚Äçüë¶",
            reply_markup=ReplyKeyboardMarkup([[str(i)] for i in range(1, 11)], one_time_keyboard=True)
        )
        return PERSON_COUNT

    @staticmethod
    def car_owner(update: Update, context: CallbackContext) -> int:
        context.user_data['choice'] = 'üîç–í–Ü–ó–¨–ú–£ –ü–û–ü–£–¢–ù–ò–ö–ê. –Ø –í–õ–ê–°–ù–ò–ö –ê–í–¢–ûüöó'
        update.message.reply_text(
            "–î–æ–±—Ä–µ! –Ø —Ç–æ–±—ñ –¥–æ–ø–æ–º–æ–∂—É —Å—Ç–≤–æ—Ä–∏—Ç–∏ –ø–æ—Å—Ç –ø—Ä–æ –ø–æ—à—É–∫ –ø–æ–ø—É—Ç–Ω–∏–∫–∞ –¥–ª—è –≤–ª–∞—Å–Ω–∏–∫—ñ–≤ –∞–≤—Ç–æ.\n\n"
            "!!–£—Å—ñ –ø–æ—Å—Ç–∏ –ø–µ—Ä–µ–≤—ñ—Ä—è—é—Ç—å—Å—è, —Ç–æ–º—É –∑–∞–ø–æ–≤–Ω—é–π—Ç–µ –ª–∏—à–µ —É –ø—Ä–∞–≤–∏–ª—å–Ω—ñ–π —Ñ–æ—Ä–º—ñ. –Ø–∫—â–æ —Ñ–æ—Ä–º–∞ –∑–∞–ø–æ–≤–Ω–µ–Ω–Ω—è –±—É–¥–µ —Ö–∏–±–Ω–æ—é - –ø–æ—Å—Ç –±—É–¥–µ –≤–∏–¥–∞–ª–µ–Ω–æ!!!\n\n"
            "–°–∫—ñ–ª—å–∫–∏ –º–æ–∂–µ—Ç–µ –≤–∑—è—Ç–∏ –æ—Å—ñ–± –¥–æ —Å–µ–±–µ –≤ –∞–≤—Ç–æ?",
            reply_markup=ReplyKeyboardMarkup([[str(i)] for i in range(1, 11)], one_time_keyboard=True)
        )
        return PERSON_COUNT

    @staticmethod
    def person_count(update: Update, context: CallbackContext) -> int:
        context.user_data['person_count'] = update.message.text
        update.message.reply_text(
            "–ó–≤—ñ–¥–∫–∏ —ó–¥–µ—Ç–µ?üè¨\n\n –ó–∞–∑–Ω–∞—á—Ç–µ –±–∞–∂–∞–Ω–µ –º—ñ—Å—Ü–µ –≤—ñ–¥–ø—Ä–∞–≤–ª–µ–Ω–Ω—è —É —Ñ–æ—Ä–º–∞—Ç—ñ: –ö–∏—ó–≤, –í–æ–∫–∑–∞–ª—å–Ω–∞ 4 üè´\n"
            "–Ø–∫—â–æ —Ü–µ —Å–µ–ª–æ/—Å–º—Ç - –¥–æ–¥–∞–π—Ç–µ –æ–±–ª–∞—Å—Ç—å, —É —Ñ–æ—Ä–º–∞—Ç—ñ: –ö–∏—ó–≤—Å—å–∫–∞ –æ–±–ª–∞—Å—Ç—å, –ö–∞–ª–∏–Ω—ñ–≤–∫–∞ üè°\n\n"
            "–í–∞—à–∞ –∞–¥—Ä–µ—Å–∞:"
            )
        return DEPARTURE

    @staticmethod
    def departure(update: Update, context: CallbackContext) -> int:
        context.user_data['departure'] = update.message.text
        update.message.reply_text(
            "–ö—É–¥–∏ —ó–¥–µ—Ç–µ?üöò\n\n –ó–∞–∑–Ω–∞—á—Ç–µ –±–∞–∂–∞–Ω–µ –º—ñ—Å—Ü–µ –ø—Ä–∏–±—É—Ç—Ç—è —É —Ñ–æ—Ä–º–∞—Ç—ñ: –õ—å–≤—ñ–≤, –¶–µ–Ω—Ç—Ä üè¶\n"
            "–Ø–∫—â–æ —Ü–µ —Å–µ–ª–æ/—Å–º—Ç - –¥–æ–¥–∞–π—Ç–µ –æ–±–ª–∞—Å—Ç—å, —É —Ñ–æ—Ä–º–∞—Ç—ñ: –ö–∏—ó–≤—Å—å–∫–∞ –æ–±–ª–∞—Å—Ç—å, –ö–∞–ª–∏–Ω—ñ–≤–∫–∞ üè°\n\n"
            "–í–∞—à–∞ –≤—ñ–¥–ø–æ–≤—ñ–¥—å:"
        )
        return DESTINATION

    @staticmethod
    def destination(update: Update, context: CallbackContext) -> int:
        context.user_data['destination'] = update.message.text
        update.message.reply_text("–ë–∞–∂–∞–Ω–∞ –¥–∞—Ç–∞ –ø–æ—ó–∑–¥–∫–∏?üìÖ\n\n –ó–∞–∑–Ω–∞—á—Ç–µ –±–∞–∂–∞–Ω—É –¥–∞—Ç—É –ø–æ—ó–∑–¥–∫–∏ —É —Ñ–æ—Ä–º–∞—Ç—ñ: 30.09.2023")
        return TRAVEL_DATE

    @staticmethod
    def travel_date(update: Update, context: CallbackContext) -> int:
        context.user_data['travel_date'] = update.message.text
        update.message.reply_text(
            "–ù–∞–¥–∞–π—Ç–µ –∫–æ–º–µ–Ω—Ç–∞—Ä –¥–æ –≤–∞—à–æ–≥–æ –ø–æ—Å—Ç—É, —è–∫–∏–π –±—É–¥—É—Ç—å –±–∞—á–∏—Ç–∏ —ñ–Ω—à—ñ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ —á–∞—Ç-–±–æ—Ç—É. üí¨\n\n"
            "–¢—É—Ç –≤–∏ –º–æ–∂–µ—Ç–µ –≤–∫–∞–∑–∞—Ç–∏ –º–∞—Ä–∫—É –º–∞—à–∏–Ω–∏, –≥—Ä–æ—à–æ–≤—É –≤–∏–Ω–∞–≥–æ—Ä–æ–¥—É, –∞–ª–µ—Ä–≥—ñ—é –Ω–∞ —Ç–≤–∞—Ä–∏–Ω —Ç–æ—â–æ.üí∏üêïüë©‚Äçüëß\n\n"
            "–ö–æ–º–µ–Ω—Ç–∞—Ä:"
        )
        return COMMENT

    @staticmethod
    def comment(update: Update, context: CallbackContext) -> int:
        context.user_data['comment'] = update.message.text
        update.message.reply_text(
            "‚òéÔ∏è–ù–∞–¥–∞–π–µ –≤–∞—à –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω—É –∑–∞ —è–∫–∏–º –∑ –≤–∞–º–∏ –º–æ–∂–Ω–∞ –±—É–¥–µ –∑–≤'—è–∑–∞—Ç–∏—Å—å:",
            reply_markup=ReplyKeyboardMarkup(
                [[KeyboardButton("–ù–∞–¥–∞—Ç–∏ –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω—Éüì≤", request_contact=True)]],
                one_time_keyboard=True
            )
        )
        return PHONE_NUMBER

    @staticmethod
    def phone_number(update: Update, context: CallbackContext) -> int:
        contact = update.message.contact
        if contact:
            context.user_data['phone_number'] = contact.phone_number
        else:
            context.user_data['phone_number'] = update.message.text
        
        update.message.reply_text("üì±–ù–∞–¥–∞–π–µ –≤–∞—à Telegram ID, —â–æ–± –ø–æ–ø—É—Ç–Ω–∏–∫–∏ –º–∞–ª–∏ –∑–º–æ–≥—É –∑–≤'—è–∑–∞—Ç–∏—Å—è –∑ –≤–∞–º–∏. –£ —Ñ–æ—Ä–º–∞—Ç—ñ: @vashe_id\n–ú–æ—î Telegram ID:")
        return TELEGRAM_ID

    @staticmethod
    def telegram_id(update: Update, context: CallbackContext) -> int:
        context.user_data['telegram_id'] = update.message.text
        user_data = context.user_data
        post = (
            f"{user_data.get('choice', '–ù–µ–≤—ñ–¥–æ–º–æ')}\n"
            f"üë• –ö—ñ–ª—å–∫—ñ—Å—Ç—å –æ—Å—ñ–±: {user_data.get('person_count', '–ù–µ–≤—ñ–¥–æ–º–æ')}\n"
            f"üìç –ó–≤—ñ–¥–∫–∏: {user_data.get('departure', '–ù–µ–≤—ñ–¥–æ–º–æ')}\n"
            f"üèÅ –ö—É–¥–∏: {user_data.get('destination', '–ù–µ–≤—ñ–¥–æ–º–æ')}\n"
            f"üìÖ –î–∞—Ç–∞: {user_data.get('travel_date', '–ù–µ–≤—ñ–¥–æ–º–æ')}\n"
            f"üí¨ –ö–æ–º–µ–Ω—Ç–∞—Ä: {user_data.get('comment', '–ù–µ–º–∞—î –∫–æ–º–µ–Ω—Ç–∞—Ä—è')}\n"
            f"‚òéÔ∏è –ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω—É: {user_data.get('phone_number', '–ù–µ–≤—ñ–¥–æ–º–æ')}\n"
            f"üì± Telegram ID: {user_data.get('telegram_id', '–ù–µ–≤—ñ–¥–æ–º–æ')}"
        )
        update.message.reply_text("–í–∞—à –ø–æ—Å—Ç —É—Å–ø—ñ—à–Ω–æ —Å—Ç–≤–æ—Ä–µ–Ω–æ  —Ç–∞ –Ω–∞–¥—ñ—Å–ª–∞–Ω–æ –Ω–∞ –≥–æ–ª–æ–≤–Ω–∏–π –∫–∞–Ω–∞–ª 'https://t.me/poputnyky_ukraine' –¥–ª—è –ø–æ—à—É–∫—É –ø–æ–ø—É—Ç–Ω–∏–∫—ñ–≤:\n\n" + post)
        # –í—ñ–¥–ø—Ä–∞–≤–∫–∞ –ø–æ—Å—Ç—É –≤ –∑–∞–≥–∞–ª—å–Ω–∏–π —á–∞—Ç
        chat_id = '-1002009177529'
        context.bot.send_message(chat_id=chat_id, text=post)
        # –ó–∞–≤–µ—Ä—à–µ–Ω–Ω—è
        update.message.reply_text(
            '... \n\n'
            '–©–æ–± –≤—ñ–¥—Ä–∞–∑—É –ø–æ–≤–µ—Ä–Ω—É—Ç–∏—Å—è —É –≥–æ–ª–æ–≤–Ω–µ –ú–ï–ù–Æ - –Ω–∞—Ç–∏—Å–Ω—ñ—Ç—å /choose \n'
            '–©–æ–± –ø–æ—á–∞—Ç–∏ –±–æ—Ç –∑ —Å–∞–º–æ–≥–æ –ø–æ—á–∞—Ç–∫—É - –Ω–∞—Ç–∏—Å–Ω—ñ—Ç—å /start'
        )
        return ConversationHandler.END

class EvacuationHelp:
    @staticmethod
    def evacuation(update: Update, context: CallbackContext) -> int:
        context.user_data['choice'] = 'üö®–ü–û–¢–†–Ü–ë–ù–û –ï–í–ê–ö–£–Æ–í–ê–¢–ò–°–Øüì¢'
        update.message.reply_text(
            "–î–æ–±—Ä–µ!‚ú® –Ø —Ç–æ–±—ñ –¥–æ–ø–æ–º–æ–∂—É —Å—Ç–≤–æ—Ä–∏—Ç–∏ –ø–æ—Å—Ç –ø—Ä–æ –ø–æ—à—É–∫ –¥–æ–ø–æ–º–æ–≥–∏ –≤ –µ–≤–∞–∫—É–∞—Ü—ñ—ó: –≤–∏—ó–∑–¥—É –∑ –æ–∫—É–ø–æ–≤–∞–Ω–∏—Ö –º—ñ—Å—Ü—å —Ç–∞ –ø—Ä–∏–∫–æ—Ä–¥–æ–Ω–Ω–∏—Ö —Ç–µ—Ä–∏—Ç–æ—Ä—ñ–π –∑ –≤–æ—î–Ω–Ω–∏–º–∏ –¥—ñ—è–º–∏.üôèüö®\n\n"
            "–î–∞–Ω–Ω–∏–π –ø–æ—Å—Ç –±—É–¥–µ —Ä–æ–∑—ñ—Å–ª–∞–Ω–∏–π —É –ø–µ–≤–Ω—ñ –≤–æ–ª–æ–Ω—Ç–µ—Ä—Å—å–∫—ñ –æ—Ä–≥–∞–Ω—ñ–∑–∞—Ü—ñ—ó —è–∫—ñ –∑–∞–π–º–∞—é—Ç—å—Å—è –µ–≤–∞–∫—É–∞—Ü—ñ—î—é –ª—é–¥–µ–π –∑ –æ–∫—É–ø–æ–≤–∞–Ω–∏—Ö —Ç–∞ –ø—Ä–∏–∫–æ—Ä–¥–æ–Ω–Ω–∏—Ö —Ç–µ—Ä–∏—Ç–æ—Ä—ñ–π.üöë\n\n"
            "‚ùóÔ∏è‚ùóÔ∏è‚ùóÔ∏è–í—Å—ñ –ø–æ—Å—Ç–∏ –ø–µ—Ä–µ–≤—ñ—Ä—è—é—Ç—å—Å—è –Ω–∞ –±—Ä–µ—Ö–Ω—é! –ü–æ—Å—Ç–∏ –∑–∞–ø–æ–≤–Ω—é–≤–∞—Ç–∏ –ª–∏—à–µ —É –ø—Ä–∞–≤–∏–ª—å–Ω—ñ–π —Ñ–æ—Ä–º—ñ - –∞–±–æ –ø–æ—Å—Ç –±—É–¥–µ –≤–∏–¥–∞–ª–µ–Ω–æ‚ùóÔ∏è‚ùóÔ∏è‚ùóÔ∏è\n\n"
            "üë©‚Äçüë¶–°–∫—ñ–ª—å–∫–∏ –æ—Å—ñ–± –ø–æ—Ç—Ä—ñ–±–Ω–æ –µ–≤–∞–∫—É—é–≤–∞—Ç–∏?üë®‚Äçüë©‚Äçüëß‚Äçüë¶üë®‚Äçüë¶",
            reply_markup=ReplyKeyboardMarkup([[str(i)] for i in range(1, 11)], one_time_keyboard=True)
        )
        return PERSON_COUNT_EVACUATION

    @staticmethod
    def person_count_evacuation(update: Update, context: CallbackContext) -> int:
        context.user_data['person_count_evacuation'] = update.message.text
        update.message.reply_text("üë®‚Äçüë©‚Äçüëß –Ø–∫ –∑–≤–∞—Ç–∏ –≤—Å—ñ—Ö –ª—é–¥–µ–π, —è–∫–∏–º –ø–æ—Ç—Ä—ñ–±–Ω–æ –Ω–∞–¥–∞—Ç–∏ –¥–æ–ø–æ–º–æ–≥—É –≤ –µ–≤–∞–∫—É–∞—Ü—ñ—ó? –°–∫—ñ–ª—å–∫–∏ —ó–º —Ä–æ—ñ–≤?\n\n –ù–∞–¥–∞–π—Ç–µ –ø–æ–≤–Ω–∏–π —Å–ø–∏—Å–æ–∫. (–ü–†–ò–ó–í–Ü–©–ï –Ü–ú'–Ø –≤—ñ–∫)")
        return NAMES_EVACUATION

    @staticmethod
    def names_evacuation(update: Update, context: CallbackContext) -> int:
        context.user_data['names_evacuation'] = update.message.text
        update.message.reply_text(
            "üè¢–ó–≤—ñ–¥–∫–∏ –≤–∞–º –ø–æ—Ç—Ä—ñ–±–Ω–æ –µ–≤–∞–∫—É—é–≤–∞—Ç–∏—Å—è?üè•\n\n –ó–∞–∑–Ω–∞—á—Ç–µ –ø–æ–≤–Ω–∏–π –∞–¥—Ä–µ—Å —É —Ñ–æ—Ä–º–∞—Ç—ñ: –ö–∏—ó–≤, –≤—É–ª. –ú–µ—á–Ω–∏–∫–æ–≤–∞ 17 –∫–≤. 5\n"
            "üè°–Ø–∫—â–æ —Ü–µ —Å–µ–ª–æ/—Å–º—Ç - –¥–æ–¥–∞–π—Ç–µ –æ–±–ª–∞—Å—Ç—å, —É —Ñ–æ—Ä–º–∞—Ç—ñ: –ö–∏—ó–≤—Å—å–∫–∞ –æ–±–ª–∞—Å—Ç—å, –ö–∞–ª–∏–Ω—ñ–≤–∫–∞\n\n"
            "–í–∞—à–∞ –∞–¥—Ä–µ—Å–∞: "
        )
        return DEPARTURE_EVACUATION

    @staticmethod
    def departure_evacuation(update: Update, context: CallbackContext) -> int:
        context.user_data['departure_evacuation'] = update.message.text
        update.message.reply_text(
            "üí¨–ù–∞–¥–∞–π—Ç–µ –∫–æ–º–µ–Ω—Ç–∞—Ä –¥–æ –≤–∞—à–æ–≥–æ –ø–æ—Å—Ç—É.\n\n –í–∫–∞–∂—ñ—Ç—å, –Ω–∞–ø—Ä–∏–∫–ª–∞–¥, —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—é –ø—Ä–æ –Ω–∞—è–≤–Ω—ñ—Å—Ç—å –ª—é–¥–µ–π –∑ —ñ–Ω–≤–∞–ª—ñ–¥–Ω—ñ—Å—Ç—é, –≤–∞–∂–∫–æ –ø–æ—Ä–∞–Ω–µ–Ω–∏—Ö –ª—é–¥–µ–π, –¥–æ–º–∞—à–Ω—ñ—Ö —Ç–≤–∞—Ä–∏–Ω —Ç–∞ –±—É–¥—å-—è–∫—É —ñ–Ω—à—É —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—é, —è–∫—É –≤–≤–∞–∂–∞—î—Ç–µ –í–ê–ñ–õ–ò–í–û–Æ –¥–ª—è –≤–∞—à–æ–≥–æ –ø–æ–¥–∞–ª—å—à–æ–≥–æ –µ–≤–∞–∫—É—é–≤–∞–Ω–Ω—è.üö®üë®üèª‚Äçü¶Ωü§∞üèºüë®‚Äçüëß‚Äçüë¶\n\n"
            "–í–∞—à –∫–æ–º–µ–Ω—Ç–∞—Ä:"
        )
        return COMMENT_EVACUATION

    @staticmethod
    def comment_evacuation(update: Update, context: CallbackContext) -> int:
        context.user_data['comment_evacuation'] = update.message.text
        update.message.reply_text(
            "‚òéÔ∏è–ù–∞–¥–∞–π–µ –≤–∞—à –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω—É –∑–∞ —è–∫–∏–º –∑ –≤–∞–º–∏ –º–æ–∂–Ω–∞ –±—É–¥–µ –∑–≤'—è–∑–∞—Ç–∏—Å—å:",
            reply_markup=ReplyKeyboardMarkup(
                [[KeyboardButton("–ù–∞–¥–∞—Ç–∏ –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω—Éüì≤", request_contact=True)]],
                one_time_keyboard=True
            )
        )
        return PHONE_NUMBER_EVACUATION

    @staticmethod
    def phone_number_evacuation(update: Update, context: CallbackContext) -> int:
        contact = update.message.contact
        if contact:
            context.user_data['phone_number_evacuation'] = contact.phone_number
        else:
            context.user_data['phone_number_evacuation'] = update.message.text

        update.message.reply_text("üì±–ù–∞–¥–∞–π–µ –≤–∞—à Telegram ID, —â–æ–± –≤–æ–ª–æ–Ω—Ç–µ—Ä–∏ –º–∞–ª–∏ –∑–º–æ–≥—É –∑–≤'—è–∑–∞—Ç–∏—Å—è –∑ –≤–∞–º–∏. –£ —Ñ–æ—Ä–º–∞—Ç—ñ: @vashe_id\n–ú–æ—î Telegram ID:")
        return TELEGRAM_ID_EVACUATION

    @staticmethod
    def telegram_id_evacuation(update: Update, context: CallbackContext) -> int:
        context.user_data['telegram_id_evacuation'] = update.message.text
        user_data = context.user_data
        post1 = (
            f"{user_data.get('choice', '–ù–µ–≤—ñ–¥–æ–º–æ')}\n"
            f"üë®‚Äçüë©‚Äçüë¶‚Äçüë¶ –ö—ñ–ª—å–∫—ñ—Å—Ç—å –æ—Å—ñ–±: {user_data.get('person_count_evacuation', '–ù–µ–≤—ñ–¥–æ–º–æ')}\n"
            f"üë• –Ü–º'—è –ª—é–¥–µ–π: {user_data.get('names_evacuation', '–ù–µ–≤—ñ–¥–æ–º–æ')}\n"
            f"üìç –ó–≤—ñ–¥–∫–∏: {user_data.get('departure_evacuation', '–ù–µ–≤—ñ–¥–æ–º–æ')}\n"
            f"üí¨ –ö–æ–º–µ–Ω—Ç–∞—Ä: {user_data.get('comment_evacuation', '–ù–µ–º–∞—î –∫–æ–º–µ–Ω—Ç–∞—Ä—è')}\n"
            f"üì± –ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω—É: {user_data.get('phone_number_evacuation', '–ù–µ–≤—ñ–¥–æ–º–æ')}\n"
            f"üì± Telegram ID: {user_data.get('telegram_id_evacuation', '–ù–µ–≤—ñ–¥–æ–º–æ')}"
        )
        update.message.reply_text("–í–∞—à –ø–æ—Å—Ç –Ω–∞ –µ–≤–∞–∫—É–∞—Ü—ñ—é —É—Å–ø—ñ—à–Ω–æ —Å—Ç–≤–æ—Ä–µ–Ω–æ:\n\n" + post1)
        update.message.reply_text("üôè–í–∞—à –ø–æ—Å—Ç –Ω–∞–¥—ñ—Å–ª–∞–Ω–æ –Ω–∞ –≥–æ–ª–æ–≤–Ω–∏–π –∫–∞–Ω–∞–ª 'https://t.me/poputnyky_ukraine' –¥–ª—è –ª—é–¥–µ–π —è–∫—ñ –ø–æ—Ç—Ä–µ–±—É—é—Ç—å –¥–æ–ø–æ–º–æ–≥–∏ –≤ –µ–≤–∞–∫—É–∞—Ü—ñ—ó, —Ç–∞ –Ω–∞–¥—ñ—Å–ª–∞–Ω–æ –≤ —ñ–Ω—à—ñ –æ—Ä–≥–∞–Ω—ñ–∑–∞—Ü—ñ—ó —Ç–∞ –≤–æ–ª–æ–Ω—Ç–µ—Ä–∞–º, —â–æ –∑–∞–π–º–∞—é—Ç—å—Å—è –µ–≤–∞–∫—É–∞—Ü—ñ—î—é. –ß–µ–∫–∞–π—Ç–µ, –ø–æ–∫–∏ –∑ –≤–∞–º–∏ –∑–≤'—è–∂—É—Ç—å—Å—è –ø–æ –Ω–æ–º–µ—Ä—É —Ç–µ–ª–µ—Ñ–æ–Ω—É. –Ø–∫—â–æ –º–∏ –Ω–µ –∑–º–æ–∂–µ–º–æ –¥–æ –≤–∞—Å –¥–æ–¥–∑–≤–æ–Ω–∏—Ç–∏—Å—è - –Ω–∞–ø–∏—à–µ–º–æ –≤–∞–º —É –¢–µ–ª–µ–≥—Ä–∞–º.üì¢\n\n")
        # –í—ñ–¥–ø—Ä–∞–≤–∫–∞ –ø–æ—Å—Ç—É –≤ –∑–∞–≥–∞–ª—å–Ω–∏–π —á–∞—Ç —Ç–∞ —ñ–Ω—à–∏ –≤–æ–ª–æ–Ω—Ç–µ—Ä–∞–º —è–∫—ñ –∑–∞–π–º–∞—é—Ç—å—Å—è –¥–æ–ø–æ–º–æ–≥–æ—é –≤ –µ–≤–∞–∫—É–∞—Ü—ñ—ó
        # –¢—É—Ç –º–æ–∂—É—Ç—å –±—É—Ç–∏ –∞–π–¥—ñ —ñ–Ω—à–∏—Ö –≤–æ–ª–æ–Ω—Ç–µ—Ä—ñ–≤, —è–∫–∏–º –º–æ–∂—É—Ç—å –Ω–∞–¥—Å–∏–ª–∞—Ç–∏—Å—è –ø–æ—Å—Ç–∏ –≤—ñ–¥ –ª—é–¥–µ–π —è–∫—ñ –ø–æ—Ç—Ä–µ–±—É—é—Ç—å –¥–æ–ø–æ–º–æ–≥—É. –ú–æ–∂–Ω–∞ –¥–æ–¥–∞—Ç–∏ –π —ñ–Ω—à—ñ –≥—Ä—É–ø–∏ –¥–ª—è –ø—É–±–ª—ñ–∫–∞—Ü—ñ—ó –ø–æ—Å—Ç—ñ–≤ –ø—Ä–æ –ø–æ—à—É–∫ –¥–æ–ø–æ–º–æ–≥–∏.
        chat_id = '-1002009177529'
        context.bot.send_message(chat_id=chat_id, text=post1)
        # –ó–∞–≤–µ—Ä—à–µ–Ω–Ω—è
        update.message.reply_text(
            '... \n\n'
            '–©–æ–± –≤—ñ–¥—Ä–∞–∑—É –ø–æ–≤–µ—Ä–Ω—É—Ç–∏—Å—è —É –≥–æ–ª–æ–≤–Ω–µ –ú–ï–ù–Æ - –Ω–∞—Ç–∏—Å–Ω—ñ—Ç—å /choose\n'
            '–©–æ–± –ø–æ—á–∞—Ç–∏ –±–æ—Ç –∑ —Å–∞–º–æ–≥–æ –ø–æ—á–∞—Ç–∫—É - –Ω–∞—Ç–∏—Å–Ω—ñ—Ç—å /start'
        )
        return ConversationHandler.END

class Bot:
    def __init__(self, token):
        self.updater = Updater(token, use_context=True)
        self.dispatcher = self.updater.dispatcher
        self.add_handlers()

    def add_handlers(self):
        conv_handler = ConversationHandler(
            entry_points=[CommandHandler('start', MainCommands.start), CommandHandler('choose', MainCommands.choose)],
            states={
                CHOOSING: [CallbackQueryHandler(MainCommands.button)],
                SEEKING_COMPANION: [MessageHandler(Filters.text & ~Filters.command, CompanionSearch.seeking_companion)],
                CAR_OWNER: [MessageHandler(Filters.text & ~Filters.command, CompanionSearch.car_owner)],
                EVACUATION: [MessageHandler(Filters.text & ~Filters.command, EvacuationHelp.evacuation)],
                PERSON_COUNT: [MessageHandler(Filters.regex('^\d+$'), CompanionSearch.person_count)],
                DEPARTURE: [MessageHandler(Filters.text & ~Filters.command, CompanionSearch.departure)],
                DESTINATION: [MessageHandler(Filters.text & ~Filters.command, CompanionSearch.destination)],
                TRAVEL_DATE: [MessageHandler(Filters.text & ~Filters.command, CompanionSearch.travel_date)],
                COMMENT: [MessageHandler(Filters.text & ~Filters.command, CompanionSearch.comment)],
                PHONE_NUMBER: [MessageHandler(Filters.contact | (Filters.text & ~Filters.command), CompanionSearch.phone_number)],
                TELEGRAM_ID: [MessageHandler(Filters.text & ~Filters.command, CompanionSearch.telegram_id)],
                PERSON_COUNT_EVACUATION: [MessageHandler(Filters.regex('^\d+$'), EvacuationHelp.person_count_evacuation)],
                NAMES_EVACUATION: [MessageHandler(Filters.text & ~Filters.command, EvacuationHelp.names_evacuation)],
                DEPARTURE_EVACUATION: [MessageHandler(Filters.text & ~Filters.command, EvacuationHelp.departure_evacuation)],
                COMMENT_EVACUATION: [MessageHandler(Filters.text & ~Filters.command, EvacuationHelp.comment_evacuation)],
                PHONE_NUMBER_EVACUATION: [MessageHandler(Filters.contact | (Filters.text & ~Filters.command), EvacuationHelp.phone_number_evacuation)],
                TELEGRAM_ID_EVACUATION: [MessageHandler(Filters.text & ~Filters.command, EvacuationHelp.telegram_id_evacuation)]
            },
            fallbacks=[CommandHandler('cancel', MainCommands.cancel)]
        )
        self.dispatcher.add_handler(conv_handler)

    def start(self):
        self.updater.start_polling()
        self.updater.idle()

if __name__ == '__main__':
    bot = Bot("6843435565:AAGQ4dm9xaPsTd3eDo2ZtT7tRr8kPauZ99A")
    bot.start()
